version: '3.4'

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

services:
### Gitlab Container #########################################
  gitlab:
    container_name: lx1036-gitlab
    image: 'gitlab/gitlab-ee:latest'
    restart: always
    hostname: 'lx1036.gitlab.com'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://lx1036.gitlab.com'
    expose:
      - "80"
      - "443"
      - "22"
    volumes:
      - ${DATA_SAVE_PATH}/gitlab/config:/etc/gitlab
      - ${DATA_SAVE_PATH}/gitlab/logs:/var/log/gitlab
      - ${DATA_SAVE_PATH}/gitlab/data:/var/opt/gitlab
    networks:
      - frontend
      - backend

### Gitlab Runner Container #########################################
  gitlab-runner:
    container_name: lx1036-gitlab-runner
    image: 'gitlab/gitlab-runner:latest'
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_SAVE_PATH}/gitlab-runner/config:/etc/gitlab-runner
    networks:
      - backend

### Workbench Container ###########################
#  workbench:
#    container_name: lx1036-workbench
#    build:
#      context: ./workbench
#      args:
#        - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
#        - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
#        - INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}
#        - INSTALL_LDAP=${WORKSPACE_INSTALL_LDAP}
#        - INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}
#        - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
#        - INSTALL_AMQP=${WORKSPACE_INSTALL_AMQP}
#        - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
#        - INSTALL_MSSQL=${WORKSPACE_INSTALL_MSSQL}
#        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
#        - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
#        - INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH}
#        - INSTALL_DRUPAL_CONSOLE=${WORKSPACE_INSTALL_DRUPAL_CONSOLE}
#        - INSTALL_AEROSPIKE=${WORKSPACE_INSTALL_AEROSPIKE}
#        - INSTALL_V8JS=${WORKSPACE_INSTALL_V8JS}
#        - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
#        - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
#        - INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
#        - INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}
#        - INSTALL_DEPLOYER=${WORKSPACE_INSTALL_DEPLOYER}
#        - INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW}
#        - INSTALL_MC=${WORKSPACE_INSTALL_MC}
#        - INSTALL_SYMFONY=${WORKSPACE_INSTALL_SYMFONY}
#        - INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON}
#        - INSTALL_IMAGE_OPTIMIZERS=${WORKSPACE_INSTALL_IMAGE_OPTIMIZERS}
#        - INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}
#        - INSTALL_TERRAFORM=${WORKSPACE_INSTALL_TERRAFORM}
#        - INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS}
#        - INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT}
#        - INSTALL_SWOOLE=${WORKSPACE_INSTALL_SWOOLE}
#        - PUID=${WORKSPACE_PUID}
#        - PGID=${WORKSPACE_PGID}
#        - CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}
#        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
#        - YARN_VERSION=${WORKSPACE_YARN_VERSION}
#        - TZ=${WORKSPACE_TIMEZONE}
#        - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
#        - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
#    image: workbench
#    extra_hosts:
#      - "dockerhost:${DOCKER_HOST_IP}"
#    ports:
#      - "${WORKSPACE_SSH_PORT}:22"
#    tty: true
#    networks:
#      - frontend
#      - backend

### PHP-FPM Container #######################################
  php-fpm:
    container_name: lx1036-php-fpm
    build:
      context: ./php-fpm
    image: lx1036-php-fpm
    volumes:
      - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ${API_REPO_PATH}:/var/www/api
      - ${ADMIN_API_REPO_PATH}:/var/www/admin/api
      - ${ADMIN_WEB_REPO_PATH}:/var/www/admin/web
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
#    depends_on:
#      - workbench
    networks:
      - backend

### NGINX Server Container ##################################
  nginx:
    container_name: lx1036-nginx
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    volumes:
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${API_REPO_PATH}:/var/www/api
      - ${ADMIN_API_REPO_PATH}:/var/www/admin/api
      - ${ADMIN_WEB_REPO_PATH}:/var/www/admin/web
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_GITLAB_PORT}:84"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

### MySQL Container #########################################
  mysql:
    container_name: lx1036-mysql
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_SAVE_PATH}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

### Redis Container #########################################
  redis:
    container_name: lx1036-redis
    build: ./redis
    volumes:
      - ${DATA_SAVE_PATH}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

